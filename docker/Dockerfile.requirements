# syntax=docker/dockerfile:1.4
ARG PYTHON_IMAGE=python:3.12-slim-bookworm
# BUILD STAGE
FROM $PYTHON_IMAGE as build

RUN apt-get update
RUN apt-get install -y \
    build-essential \
    libffi-dev \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    curl

# Install Rust
ARG RUST_VERSION=stable
ENV RUST_VERSION=${RUST_VERSION}

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
    | bash -s -- -y --profile minimal --default-toolchain $RUST_VERSION
ENV PATH="/root/.cargo/bin:$PATH"

COPY requirements.txt /
WORKDIR /pip-packages/
ENV PYCURL_SSL_LIBRARY=openssl

RUN pip wheel --no-cache-dir -r /requirements.txt
RUN rm -rf /pip-packages/src

# RUNTIME STAGE - Copy packages from build stage and install runtime dependencies
FROM $PYTHON_IMAGE

RUN apt-get update
RUN apt-get install -y \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    make

WORKDIR /pip-packages/
COPY --from=build /pip-packages/ /pip-packages/

RUN pip install --no-deps --no-index --find-links=/pip-packages/ /pip-packages/*

RUN addgroup --system application \
    && adduser --system codecov --ingroup application --home /home/codecov
